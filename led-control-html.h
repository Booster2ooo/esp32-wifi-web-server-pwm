const char CONTROL_page[] PROGMEM = R"=====(
<!DOCTYPE HTML>
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>LED Dimmer</title>
    <style>*{padding:0;margin:0}html{width:100%;height:100%}body{width:100%;height:100%;background-color:#1c1c1c;margin:auto;text-align:center}.switch-label{display:block;background:#181818;height:40px;width:80px;border-radius:50px;margin:50px auto;position:relative;box-shadow:0 0 0 2px #111}.switch-label,.switch-label:after,.switch-label:before{transition:.25s ease-in-out}.switch-label:before{content:"";display:block;position:absolute;z-index:1;top:0;left:0;border-radius:50px;height:40px;width:40px;background:#1c1c1c;box-shadow:0 3px 3px rgba(0,0,0,.2),0 0 0 2px #8f8}.switch{position:absolute;left:-5000px}.switch:checked+.switch-label{background:#8f8;box-shadow:0 0 0 2px #8f8}.switch:checked+.switch-label .on{left:100px;opacity:1}.switch:checked+.switch-label .off{right:0;opacity:0}.switch:checked+.switch-label:before{left:40px;box-shadow:0 3px 3px rgba(0,0,0,.2),0 0 0 2px #8f8}#knob-container{display:none}.switch:checked~#knob-container{display:inline-block}</style>
  </head>
  <body>
    <input class="switch" id="led-switch" type="checkbox" %TURNEDON% />
    <label for="led-switch" class="switch-label"></label>
    <div id="knob-container"></div>
    <script>
      /** pure-knob 1.0.0 - https://github.com/andrepxx/pure-knob */
      "use strict";!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.pureknob=e()}("undefined"!=typeof self?self:this,function(){return new function(){this.createKnob=function(t,e){const n=e.toString(),o=t.toString(),i=(.2*(t<e?t:e)).toString(),l=document.createElement("canvas"),s=document.createElement("div");s.style.display="inline-block",s.style.height=n+"px",s.style.position="relative",s.style.textAlign="center",s.style.width=o+"px",s.appendChild(l);const r=document.createElement("input");r.style.appearance="textfield",r.style.backgroundColor="rgba(0, 0, 0, 0.8)",r.style.border="none",r.style.color="#ff8800",r.style.fontFamily="sans-serif",r.style.fontSize=i+"px",r.style.height=n+"px",r.style.margin="auto",r.style.padding="0px",r.style.textAlign="center",r.style.width=o+"px";const a=document.createAttribute("inputmode");a.value="numeric",r.setAttributeNode(a);const u=document.createElement("div");u.style.bottom="0px",u.style.display="none",u.style.left="0px",u.style.position="absolute",u.style.right="0px",u.style.top="0px",u.appendChild(r),s.appendChild(u);const c={_canvas:l,_div:s,_height:e,_input:r,_inputDiv:u,_listeners:[],_mousebutton:!1,_previousVal:0,_timeout:null,_timeoutDoubleTap:null,_touchCount:0,_width:t,_notifyUpdate:function(){const t=this._properties.val,e=this._listeners,n=e.length;for(let o=0;o<n;o++){const n=e[o];null!==n&&n(this,t)}},_properties:{angleEnd:2*Math.PI,angleOffset:-.5*Math.PI,angleStart:0,colorBG:"#181818",colorFG:"#ff8800",colorLabel:"#ffffff",fnStringToValue:function(t){return parseInt(t)},fnValueToString:function(t){return t.toString()},label:null,needle:!1,readonly:!1,textScale:1,trackWidth:.4,valMin:0,valMax:100,val:0},abort:function(){const t=this._previousVal;this._properties.val=t,this.redraw()},addListener:function(t){this._listeners.push(t)},commit:function(){const t=this._properties.val;this._previousVal=t,this.redraw(),this._notifyUpdate()},getProperty:function(t){return this._properties[t]},getValue:function(){return this._properties.val},node:function(){return this._div},redraw:function(){this.resize();const t=this._properties,e=t.needle,n=t.angleStart,o=t.angleOffset,i=t.angleEnd,l=n+o,s=i+o,r=t.label,a=t.val,u=(0,t.fnValueToString)(a),c=t.valMin,d=l+(a-c)/(t.valMax-c)*(i-n),p=t.colorBG,f=t.colorFG,h=t.colorLabel,_=t.textScale,g=t.trackWidth,y=this._height,v=this._width,m=v<y?v:y,b=.5*v,x=.5*y,w=.4*m,E=x+w,S=Math.round(g*w),M=Math.round(.8*S).toString(),T=(.2*m*_).toString(),V=this._canvas.getContext("2d");V.clearRect(0,0,v,y),V.beginPath(),V.arc(b,x,w,l,s),V.lineCap="butt",V.lineWidth=S,V.strokeStyle=p,V.stroke(),V.beginPath(),e?V.arc(b,x,w,d-.1,d+.1):V.arc(b,x,w,l,d),V.lineCap="butt",V.lineWidth=S,V.strokeStyle=f,V.stroke(),V.font=T+"px sans-serif",V.fillStyle=f,V.textAlign="center",V.textBaseline="middle",V.fillText(u,b,x),null!==r&&(V.font=M+"px sans-serif",V.fillStyle=h,V.textAlign="center",V.textBaseline="middle",V.fillText(r,b,E));const D=this._input;D.style.color=f,D.style.fontSize=T+"px"},resize:function(){const t=this._canvas,e=t.getContext("2d"),n=window.devicePixelRatio;t.style.height=this._height+"px",t.style.width=this._width+"px",t.height=Math.floor(this._height*n),t.width=Math.floor(this._width*n),e.scale(n,n)},setProperty:function(t,e){this._properties[t]=e,this.redraw()},setValue:function(t){this.setValueFloating(t),this.commit()},setValueFloating:function(t){const e=this._properties,n=e.valMin,o=e.valMax;t<n?t=n:t>o&&(t=o),t=Math.round(t),this.setProperty("val",t)}},d=function(t,e){const n=t.target,o=.5*n.scrollWidth,i=.5*n.scrollHeight,l=t.offsetX-o,s=t.offsetY-i,r=e.angleStart,a=e.angleEnd-r;let u=Math.atan2(l,-s)-r;const c=2*Math.PI;u<0&&(a>=c?u+=c:u=0);const d=e.valMin,p=e.valMax;let f=u/a*(p-d)+d;return f<d?f=d:f>p&&(f=p),f},p=function(t,e){const n=t.target,o=n.getBoundingClientRect(),i=o.left,l=o.top,s=.5*n.scrollWidth,r=.5*n.scrollHeight,a=t.targetTouches;let u=null;a.length>0&&(u=a.item(0));let c=0,d=0;null!==u&&(c=u.clientX-i,d=u.clientY-l);const p=c-s,f=d-r,h=e.angleStart,_=e.angleEnd-h,g=2*Math.PI;let y=Math.atan2(p,-f)-h;y<0&&(_>=g?y+=g:y=0);const v=e.valMin,m=e.valMax;let b=y/_*(m-v)+v;return b<v?b=v:b>m&&(b=m),b};return l.addEventListener("dblclick",function(t){c._properties.readonly||(t.preventDefault(),c._inputDiv.style.display="block",c._input.focus(),c.redraw())}),l.addEventListener("mousedown",function(t){const e=t.buttons;if(1===e){const e=c._properties;if(!e.readonly){t.preventDefault();const n=d(t,e);c.setValueFloating(n)}c._mousebutton=!0}4===e&&(c._properties.readonly||(t.preventDefault(),c._inputDiv.style.display="block",c._input.focus(),c.redraw()))}),l.addEventListener("mouseleave",function(t){c._mousebutton&&(c.abort(),c._mousebutton=!1)}),l.addEventListener("mousemove",function(t){if(c._mousebutton){const e=c._properties;if(!e.readonly){t.preventDefault();const n=d(t,e);c.setValueFloating(n)}}}),l.addEventListener("mouseup",function(t){if(c._mousebutton){const e=c._properties;if(!e.readonly){t.preventDefault();const n=d(t,e);c.setValue(n)}}c._mousebutton=!1}),l.addEventListener("resize",function(t){c.redraw()}),l.addEventListener("touchstart",function(t){const e=c._properties;if(!e.readonly&&1===t.targetTouches.length){if(c._mousebutton=!0,0===c._touchCount){const e=function(){2===c._touchCount&&(c._properties.readonly||(t.preventDefault(),c._inputDiv.style.display="block",c._input.focus(),c.redraw())),c._touchCount=0};let n=c._timeoutDoubleTap;window.clearTimeout(n),n=window.setTimeout(e,500),c._timeoutDoubleTap=n}c._touchCount++;const n=p(t,e);c.setValueFloating(n)}}),l.addEventListener("touchmove",function(t){if(c._mousebutton){const e=c._properties;if(!e.readonly&&1===t.targetTouches.length){t.preventDefault();const n=p(t,e);c.setValueFloating(n)}}}),l.addEventListener("touchend",function(t){c._mousebutton&&(c._properties.readonly||0===t.targetTouches.length&&(t.preventDefault(),c._mousebutton=!1,c.commit())),c._mousebutton=!1}),l.addEventListener("touchcancel",function(t){if(c._mousebutton){c.abort(),c._touchCount=0;const t=c._timeoutDoubleTap;window.clearTimeout(t)}c._mousebutton=!1}),l.addEventListener("wheel",function(t){if(!c.getProperty("readonly")){t.preventDefault();const e=t.deltaY,n=e>0?1:e<0?-1:0;let o=c.getValue();o+=n,c.setValueFloating(o);const i=function(){c.commit()};let l=c._timeout;window.clearTimeout(l),l=window.setTimeout(i,250),c._timeout=l}}),r.addEventListener("keydown",function(t){const e=t.key;if("Enter"===e||"Escape"===e){c._inputDiv.style.display="none";const n=t.target;if("Enter"===e){const t=c._properties,e=n.value,o=(0,t.fnStringToValue)(e);isFinite(o)&&c.setValue(o)}n.value=""}}),c}}});
      /** end of pure-knob */

      document.addEventListener('DOMContentLoaded', () => {
        const knob = pureknob.createKnob(300, 300);
        knob.setProperty('angleStart', -0.75 * Math.PI);
        knob.setProperty('angleEnd', 0.75 * Math.PI);
        knob.setProperty('colorFG', '#88ff88');
        knob.setProperty('trackWidth', 0.4);
        knob.setProperty('valMin', 1);
        knob.setProperty('valMax', 100);
        knob.setValue(%DUTYCYCLE%);
        knob.addListener((k, value) => {
          const xhr = new XMLHttpRequest();
          xhr.open('POST', '/ledpwm', true);
          xhr.send('dutycycle='+value);
        });
        const knobContainer = document.getElementById('knob-container');
        knobContainer.appendChild(knob.node());
        const ledSwitch = document.getElementById('led-switch');
        ledSwitch.addEventListener('change', () => {
          const endpoint = ledSwitch.checked ? '/ledpwm' : '/turnoff';
          const payload = ledSwitch.checked ? 'dutycycle=' + knob.getValue() : '';
          const xhr = new XMLHttpRequest();
          xhr.open('POST', endpoint, true);
          xhr.send(payload);
        });
      }, false);
    </script>
  </body>
</html>
)=====";